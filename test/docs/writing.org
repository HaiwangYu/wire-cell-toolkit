#+title: Writing WCT tests
#+latex_header: \usepackage[margin=1in]{geometry}
#+options: ':t toc:t

This provides general information on how to write WCT tests.  See the top [[file:../README.org][README]] for links to other documents describing how to write particular tsts.

* Determine the scope of the test

When considering to develop a test, consider what should be tested and then ask yourself:

- Can the initial scope be partitioned into smaller scopes, each with their own tests.
- What *code* must a test depend on?  Can it be reduced?
- What *data* must a test depend on?  Can it be reduced, removed or hard-coded?
  
* Location of test source

The source file for a test should be placed under one of the
directories:

#+begin_example
<pkg>/test/
#+end_example

In deciding the ~<pkg>~ to house the test, particular care is needed to respect the WCT library dependency graph.  This graph should be produced by the build.  That graph at the time this document was rendered is shown below.

[[file:../../wct-deps.png]]

It is allowed for the dependency tree for test programs to be different than the library dependency graph.  However, tests should avoid adding a dependency on an external package that is not shared by that package's library.  On the other hand, tests may add dependencies on other WCT sub packages that the sub package library does not require.

For example, if a test of code in ~WireCellGen~ requires ROOT, that test should go into ~WireCellRoot~ (under ~root/test/*~ and not ~gen/test/*~).

* Name the test

An *atomic test* must have a source file name that matches the pattern:

#+begin_example
<pkg>/test/test[-_]<name>.<ext>
#+end_example

The ~<name>~ should be chosen so that:

- it is unique among all atomic tests of all extensions
- it briefly summarizes the scope of the test
- lower case with underscore or dash separators

If a test specifically addresses a GitHub issue the test file name should
include the issue number.  For example:

#+begin_example
test_issue200.bats
#+end_example
Likewise, if a test addresses things in a PR, it should contain the PR
number.  For example:
#+begin_example
test-pr195.bats
#+end_example

If a test is a BATS or shell script and uses auxiliary files such as
providing configuration, they should be included as a sibling to the
test file.  Take caution not to name them starting with ~test*~ if they
potentially match an atomic test file name and are not themselves
usable as such.

* Test source content

The main requirement of all tests is that when they are executed they have a zero return code when successfully (test passes) and non-zero when an error occurs (test fails).

The WCT test framework supports tests written in a number of languages and a guide for each is provided:

- [[file:cpp.org][Compiled C++]]
- [[file:jsonnet.org][Jsonnet]]
- [[file:python.org][Python]]
- [[file:shell.org][Shell]]
- [[file:bats.org][BATS]]
Additional forms may be added in the future.

* Test data files

Data files may be used to provide a test input.  Other "blessed" files
may be provided so that the test may attempt to reproduce them exactly
or statistically.

Files should be collected in the WCT test data repository and reuse of
files between tests is encouraged.  For more information see the
document [[file:datarepo.org]].  See also the document [[file:bats.org]] for
ways to access test data repo and other files in the context of BATS
tests.
