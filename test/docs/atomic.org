#+title: WCT atomic tests
#+latex_header: \usepackage[margin=1in]{geometry}
#+options: ':t toc:t

This describes general aspects of *atomic tests* as apposed to *variant tests*.  See [[file:framework.org]] for an overview.

* Atomic tests

A WCT atomic test is simply one that:
- has a source file found as ~<pkg>/test/test_*.*~
- requires no command line arguments
- expects no input nor produces no output known to ~wcb~
- exit with a status code reflecting success / pass (zero) or error / fail (non-zero).


More generally, *atomic tests* are expected to be near to the "unit test" side of the spectrum so that they cover a small scope, be fast to compile and run.

* Registering

An atomic test is registered with the WCT testing fame work simply by placing a source file to be found as:

#+begin_example
<pkg>/test/test_<name>.<ext>
#+end_example
Based on the ~<ext>~ it may be compiled or interpreted.

* Running 

By default a call to ~./wcb~ will run atomic tests, building them if
required.  This may be suppressed with ~./wcb --notests~.  A specific
atomic test may be exercised with ~./wcb --target=test_<name>~ where
~test_<name>~ matches the source file name without the extension.

As with all tests, running atomic tests is subject to test result
caching.  A test will not be re-run unless its dependencies (source)
change or ~./wcb --alltests~ is called.

Compiled atomic tests can be run directly via the build area:

#+begin_example
./build/<pkg>/test_<name>
#+end_example
Interpreted atomics test can be run with the proper interpreter from the source file:

#+begin_example
<interpreter> <pkg>/test/test_<name>.<ext>
#+end_example

