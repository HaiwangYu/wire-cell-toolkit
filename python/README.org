#+TITLE: Wire Cell Toolkit Python

* What's here.

This package holds some Python modules that support Wire Cell Toolkit.
Currently this is a stand-alone package that does not depend directly
on the C++ packages of WCT.

Some of the functionality provided includes converters and generators
of major WCT input data files including:

- field response functions
- wire geometry

* Installation

#+BEGIN_EXAMPLE
  $ python3 -m venv venv
  $ source venv/bin/activate
  $ cd wire-cell-toolkit/python
  $ pip install -e .
#+END_EXAMPLE

In fresh shells must repeat:

#+BEGIN_EXAMPLE
  $ source venv/bin/activate
#+END_EXAMPLE

** ZIO

The ZIO Python package can provide some functionality that WCT may
make use of (flow/domo brokers).  It's installation is somewhat
irregular so a script is provided to help.  It will also install the
~wirecell~ Python module.

#+begin_example
  $ python3 -m venv venv
  $ source venv/bin/activate
  $ ./zioinst.sh
#+end_example

* Command line interfaces

Some functionality is available from the command line, with a command
typically named after the module that provides the CLI.  For example:

#+BEGIN_EXAMPLE
  $ wirecell-sigproc --help
  Usage: wirecell-sigproc [OPTIONS] COMMAND [ARGS]...

    Wire Cell Signal Processing Features

  Options:
    --help  Show this message and exit.

  Commands:
    convert-garfield              Convert an archive of a Garfield fileset...
    plot-garfield-track-response
#+END_EXAMPLE

If your shell supports it, see what commands are available with TAB
completion:

#+begin_example
  $ wirecell-<TAB><TAB>
#+end_example

